local util = {}

function util.isMonetLoader()
    return MONET_VERSION ~= nil
end

function util.isEmpty(str)
	return str == nil or str == ""
end

function util.merge(...)
	local mergedTable = {}
	local args = { ... }
	for _, tbl in ipairs(args) do
		for k, v in pairs(tbl) do
			if type(v) == "table" and type(mergedTable[k]) == "table" then
				mergedTable[k] = util.merge(mergedTable[k], v)
			else
				mergedTable[k] = v
			end
		end
	end
	return mergedTable
end

function util.deepcopy(o, seen)
	seen = seen or {}
	if o == nil then
		return nil
	end
	if seen[o] then
		return seen[o]
	end

	local no
	if type(o) == "table" then
		no = {}
		seen[o] = no

		for k, v in next, o, nil do
			no[util.deepcopy(k, seen)] = util.deepcopy(v, seen)
		end
		setmetatable(no, util.deepcopy(getmetatable(o), seen))
	else -- number, string, boolean, etc
		no = o
	end
	return no
end

if MONET_VERSION then
	ffi = require('ffi')
	gta = ffi.load('GTASA')
	ffi.cdef[[
		void _Z12AND_OpenLinkPKc(const char* link);
	]]
end

function util.openLink(link)
	if MONET_VERSION then
    	gta._Z12AND_OpenLinkPKc(link)
	else
		os.execute("explorer " .. link)
	end
end

function util.findByField(tbl, field, value)
	for k, v in pairs(tbl) do
		if v[field] == value then
			return v
		end
	end
end

function util.invertTbl(tbl)
	local inverted = {}
	for k, v in pairs(tbl) do
		inverted[v] = k
	end
	return inverted
end

function util.path_join(...)
	local SEPARATOR = package.config:sub(1, 1)

	local parts = { ... }
	local path = parts[1]
	for i = 2, #parts do
		if path:sub(-1) == SEPARATOR then
			path = path .. parts[i]
		else
			path = path .. SEPARATOR .. parts[i]
		end
	end
	return path
end

function util.getNearestPedByPed(hndlPed, radius)
	minDist, closestHandle = nil, nil
	if doesCharExist(hndlPed) then -- проверяем, существует ли Handle
		local tX, tY, tZ = getCharCoordinates(hndlPed)
		for k, v in ipairs(getAllChars()) do
			if v ~= hndlPed then
				local x, y, z = getCharCoordinates(v)
				local dist = getDistanceBetweenCoords3d(x, y, z, tX, tY, tZ)
				if (not radius or dist < radius) and (not minDist or dist < minDist) then
					minDist, closestHandle = dist, v
				end
			end
		end
		return closestHandle
	end
end

function util.GetNearestCarByPed(HndlPed, radius, minPlayerNear)
    if doesCharExist(HndlPed) then -- проверяем, существует ли Handle
        local tableArr = {}
        local countPlayers = 0
        local posXpl, posYpl = getCharCoordinates(HndlPed)
        for _,car in pairs(getAllVehicles()) do -- перебираем все Handle машин в зоне стрима
            if getDriverOfCar(car) ~= HndlPed then -- проверяем не является ли водителем этой машины HndlPed
                local posX, posY, posZ = getCarCoordinates(car) -- получаем координаты машины
                for _,player in pairs(getAllChars()) do
                    if player ~= HndlPed then
                        local playerid = select(2, sampGetPlayerIdByCharHandle(player)) -- получаем ID игрока
                        if playerid and not sampIsPlayerNpc(playerid) and playerid ~= -1 then -- проверяем не NPC ли этот игрок
                            local x,y,z = getCharCoordinates(player)
                            if getDistanceBetweenCoords2d(x, y, posX, posY) < 3 then countPlayers = countPlayers + 1 end
                        end
                    end
                end
                local distBetween2d = getDistanceBetweenCoords2d(posXpl, posYpl, posX, posY)
                if minPlayerNear ~= false then
                    if tonumber(minPlayerNear) >= countPlayers then
                        table.insert(tableArr, {distBetween2d, car, posX, posY, posZ, countPlayers})
                    end
                else table.insert(tableArr, {distBetween2d, car, posX, posY, posZ, countPlayers}) end
                countPlayers = 0
            end
        end
        if #tableArr > 0 then -- если в таблице есть данные, то...
            table.sort(tableArr, function(a, b) return (a[1] < b[1]) end) -- сортируем 1-ое значение в каждом массиве от меньшего к большому.
            if radius ~= false then -- если функция проверки на радиус включена, то..
                if tableArr[1][1] <= tonumber(radius) then  -- если дистанция меньше или равна заданному радиусу, то ..
                    return true, tableArr[1][2], tableArr[1][1], tableArr[1][3], tableArr[1][4], tableArr[1][5], tableArr[1][6] -- возвращаем значения
                end
            else return true, tableArr[1][2], tableArr[1][1], tableArr[1][3], tableArr[1][4], tableArr[1][5], tableArr[1][6] end -- иначе, возвращаем данные
        end
    end
    return false
end

function util.calculateZone(x, y, z)
    local streets = {
        {"Avispa Country Club", -2667.810, -302.135, -28.831, -2646.400, -262.320, 71.169},
        {"Easter Bay Airport", -1315.420, -405.388, 15.406, -1264.400, -209.543, 25.406},
        {"Avispa Country Club", -2550.040, -355.493, 0.000, -2470.040, -318.493, 39.700},
        {"Easter Bay Airport", -1490.330, -209.543, 15.406, -1264.400, -148.388, 25.406},
        {"Garcia", -2395.140, -222.589, -5.3, -2354.090, -204.792, 200.000},
        {"Shady Cabin", -1632.830, -2263.440, -3.0, -1601.330, -2231.790, 200.000},
        {"East Los Santos", 2381.680, -1494.030, -89.084, 2421.030, -1454.350, 110.916},
        {"LVA Freight Depot", 1236.630, 1163.410, -89.084, 1277.050, 1203.280, 110.916},
        {"Blackfield Intersection", 1277.050, 1044.690, -89.084, 1315.350, 1087.630, 110.916},
        {"Avispa Country Club", -2470.040, -355.493, 0.000, -2270.040, -318.493, 46.100},
        {"Temple", 1252.330, -926.999, -89.084, 1357.000, -910.170, 110.916},
        {"Unity Station", 1692.620, -1971.800, -20.492, 1812.620, -1932.800, 79.508},
        {"LVA Freight Depot", 1315.350, 1044.690, -89.084, 1375.600, 1087.630, 110.916},
        {"Los Flores", 2581.730, -1454.350, -89.084, 2632.830, -1393.420, 110.916},
        {"Starfish Casino", 2437.390, 1858.100, -39.084, 2495.090, 1970.850, 60.916},
        {"Easter Bay Chemicals", -1132.820, -787.391, 0.000, -956.476, -768.027, 200.000},
        {"Downtown Los Santos", 1370.850, -1170.870, -89.084, 1463.900, -1130.850, 110.916},
        {"Esplanade East", -1620.300, 1176.520, -4.5, -1580.010, 1274.260, 200.000},
        {"Market Station", 787.461, -1410.930, -34.126, 866.009, -1310.210, 65.874},
        {"Linden Station", 2811.250, 1229.590, -39.594, 2861.250, 1407.590, 60.406},
        {"Montgomery Intersection", 1582.440, 347.457, 0.000, 1664.620, 401.750, 200.000},
        {"Frederick Bridge", 2759.250, 296.501, 0.000, 2774.250, 594.757, 200.000},
        {"Yellow Bell Station", 1377.480, 2600.430, -21.926, 1492.450, 2687.360, 78.074},
        {"Downtown Los Santos", 1507.510, -1385.210, 110.916, 1582.550, -1325.310, 335.916},
        {"Jefferson", 2185.330, -1210.740, -89.084, 2281.450, -1154.590, 110.916},
        {"Mulholland", 1318.130, -910.170, -89.084, 1357.000, -768.027, 110.916},
        {"Avispa Country Club", -2361.510, -417.199, 0.000, -2270.040, -355.493, 200.000},
        {"Jefferson", 1996.910, -1449.670, -89.084, 2056.860, -1350.720, 110.916},
        {"Julius Thruway West", 1236.630, 2142.860, -89.084, 1297.470, 2243.230, 110.916},
        {"Jefferson", 2124.660, -1494.030, -89.084, 2266.210, -1449.670, 110.916},
        {"Julius Thruway North", 1848.400, 2478.490, -89.084, 1938.800, 2553.490, 110.916},
        {"Rodeo", 422.680, -1570.200, -89.084, 466.223, -1406.050, 110.916},
        {"Cranberry Station", -2007.830, 56.306, 0.000, -1922.000, 224.782, 100.000},
        {"Downtown Los Santos", 1391.050, -1026.330, -89.084, 1463.900, -926.999, 110.916},
        {"Redsands West", 1704.590, 2243.230, -89.084, 1777.390, 2342.830, 110.916},
        {"Little Mexico", 1758.900, -1722.260, -89.084, 1812.620, -1577.590, 110.916},
        {"Blackfield Intersection", 1375.600, 823.228, -89.084, 1457.390, 919.447, 110.916},
        {"Los Santos International", 1974.630, -2394.330, -39.084, 2089.000, -2256.590, 60.916},
        {"Beacon Hill", -399.633, -1075.520, -1.489, -319.033, -977.516, 198.511},
        {"Rodeo", 334.503, -1501.950, -89.084, 422.680, -1406.050, 110.916},
        {"Richman", 225.165, -1369.620, -89.084, 334.503, -1292.070, 110.916},
        {"Downtown Los Santos", 1724.760, -1250.900, -89.084, 1812.620, -1150.870, 110.916},
        {"The Strip", 2027.400, 1703.230, -89.084, 2137.400, 1783.230, 110.916},
        {"Downtown Los Santos", 1378.330, -1130.850, -89.084, 1463.900, -1026.330, 110.916},
        {"Blackfield Intersection", 1197.390, 1044.690, -89.084, 1277.050, 1163.390, 110.916},
        {"Conference Center", 1073.220, -1842.270, -89.084, 1323.900, -1804.210, 110.916},
        {"Montgomery", 1451.400, 347.457, -6.1, 1582.440, 420.802, 200.000},
        {"Foster Valley", -2270.040, -430.276, -1.2, -2178.690, -324.114, 200.000},
        {"Blackfield Chapel", 1325.600, 596.349, -89.084, 1375.600, 795.010, 110.916},
        {"Los Santos International", 2051.630, -2597.260, -39.084, 2152.450, -2394.330, 60.916},
        {"Mulholland", 1096.470, -910.170, -89.084, 1169.130, -768.027, 110.916},
        {"Yellow Bell Gol Course", 1457.460, 2723.230, -89.084, 1534.560, 2863.230, 110.916},
        {"The Strip", 2027.400, 1783.230, -89.084, 2162.390, 1863.230, 110.916},
        {"Jefferson", 2056.860, -1210.740, -89.084, 2185.330, -1126.320, 110.916},
        {"Mulholland", 952.604, -937.184, -89.084, 1096.470, -860.619, 110.916},
        {"Aldea Malvada", -1372.140, 2498.520, 0.000, -1277.590, 2615.350, 200.000},
        {"Las Colinas", 2126.860, -1126.320, -89.084, 2185.330, -934.489, 110.916},
        {"Las Colinas", 1994.330, -1100.820, -89.084, 2056.860, -920.815, 110.916},
        {"Richman", 647.557, -954.662, -89.084, 768.694, -860.619, 110.916},
        {"LVA Freight Depot", 1277.050, 1087.630, -89.084, 1375.600, 1203.280, 110.916},
        {"Julius Thruway North", 1377.390, 2433.230, -89.084, 1534.560, 2507.230, 110.916},
        {"Willowfield", 2201.820, -2095.000, -89.084, 2324.000, -1989.900, 110.916},
        {"Julius Thruway North", 1704.590, 2342.830, -89.084, 1848.400, 2433.230, 110.916},
        {"Temple", 1252.330, -1130.850, -89.084, 1378.330, -1026.330, 110.916},
        {"Little Mexico", 1701.900, -1842.270, -89.084, 1812.620, -1722.260, 110.916},
        {"Queens", -2411.220, 373.539, 0.000, -2253.540, 458.411, 200.000},
        {"Las Venturas Airport", 1515.810, 1586.400, -12.500, 1729.950, 1714.560, 87.500},
        {"Richman", 225.165, -1292.070, -89.084, 466.223, -1235.070, 110.916},
        {"Temple", 1252.330, -1026.330, -89.084, 1391.050, -926.999, 110.916},
        {"East Los Santos", 2266.260, -1494.030, -89.084, 2381.680, -1372.040, 110.916},
        {"Julius Thruway East", 2623.180, 943.235, -89.084, 2749.900, 1055.960, 110.916},
        {"Willowfield", 2541.700, -1941.400, -89.084, 2703.580, -1852.870, 110.916},
        {"Las Colinas", 2056.860, -1126.320, -89.084, 2126.860, -920.815, 110.916},
        {"Julius Thruway East", 2625.160, 2202.760, -89.084, 2685.160, 2442.550, 110.916},
        {"Rodeo", 225.165, -1501.950, -89.084, 334.503, -1369.620, 110.916},
        {"Las Brujas", -365.167, 2123.010, -3.0, -208.570, 2217.680, 200.000},
        {"Julius Thruway East", 2536.430, 2442.550, -89.084, 2685.160, 2542.550, 110.916},
        {"Rodeo", 334.503, -1406.050, -89.084, 466.223, -1292.070, 110.916},
        {"Vinewood", 647.557, -1227.280, -89.084, 787.461, -1118.280, 110.916},
        {"Rodeo", 422.680, -1684.650, -89.084, 558.099, -1570.200, 110.916},
        {"Julius Thruway North", 2498.210, 2542.550, -89.084, 2685.160, 2626.550, 110.916},
        {"Downtown Los Santos", 1724.760, -1430.870, -89.084, 1812.620, -1250.900, 110.916},
        {"Rodeo", 225.165, -1684.650, -89.084, 312.803, -1501.950, 110.916},
        {"Jefferson", 2056.860, -1449.670, -89.084, 2266.210, -1372.040, 110.916},
        {"Hampton Barns", 603.035, 264.312, 0.000, 761.994, 366.572, 200.000},
        {"Temple", 1096.470, -1130.840, -89.084, 1252.330, -1026.330, 110.916},
        {"Kincaid Bridge", -1087.930, 855.370, -89.084, -961.950, 986.281, 110.916},
        {"Verona Beach", 1046.150, -1722.260, -89.084, 1161.520, -1577.590, 110.916},
        {"Commerce", 1323.900, -1722.260, -89.084, 1440.900, -1577.590, 110.916},
        {"Mulholland", 1357.000, -926.999, -89.084, 1463.900, -768.027, 110.916},
        {"Rodeo", 466.223, -1570.200, -89.084, 558.099, -1385.070, 110.916},
        {"Mulholland", 911.802, -860.619, -89.084, 1096.470, -768.027, 110.916},
        {"Mulholland", 768.694, -954.662, -89.084, 952.604, -860.619, 110.916},
        {"Julius Thruway South", 2377.390, 788.894, -89.084, 2537.390, 897.901, 110.916},
        {"Idlewood", 1812.620, -1852.870, -89.084, 1971.660, -1742.310, 110.916},
        {"Ocean Docks", 2089.000, -2394.330, -89.084, 2201.820, -2235.840, 110.916},
        {"Commerce", 1370.850, -1577.590, -89.084, 1463.900, -1384.950, 110.916},
        {"Julius Thruway North", 2121.400, 2508.230, -89.084, 2237.400, 2663.170, 110.916},
        {"Temple", 1096.470, -1026.330, -89.084, 1252.330, -910.170, 110.916},
        {"Glen Park", 1812.620, -1449.670, -89.084, 1996.910, -1350.720, 110.916},
        {"Easter Bay Airport", -1242.980, -50.096, 0.000, -1213.910, 578.396, 200.000},
        {"Martin Bridge", -222.179, 293.324, 0.000, -122.126, 476.465, 200.000},
        {"The Strip", 2106.700, 1863.230, -89.084, 2162.390, 2202.760, 110.916},
        {"Willowfield", 2541.700, -2059.230, -89.084, 2703.580, -1941.400, 110.916},
        {"Marina", 807.922, -1577.590, -89.084, 926.922, -1416.250, 110.916},
        {"Las Venturas Airport", 1457.370, 1143.210, -89.084, 1777.400, 1203.280, 110.916},
        {"Idlewood", 1812.620, -1742.310, -89.084, 1951.660, -1602.310, 110.916},
        {"Esplanade East", -1580.010, 1025.980, -6.1, -1499.890, 1274.260, 200.000},
        {"Downtown Los Santos", 1370.850, -1384.950, -89.084, 1463.900, -1170.870, 110.916},
        {"The Mako Span", 1664.620, 401.750, 0.000, 1785.140, 567.203, 200.000},
        {"Rodeo", 312.803, -1684.650, -89.084, 422.680, -1501.950, 110.916},
        {"Pershing Square", 1440.900, -1722.260, -89.084, 1583.500, -1577.590, 110.916},
        {"Mulholland", 687.802, -860.619, -89.084, 911.802, -768.027, 110.916},
        {"Gant Bridge", -2741.070, 1490.470, -6.1, -2616.400, 1659.680, 200.000},
        {"Las Colinas", 2185.330, -1154.590, -89.084, 2281.450, -934.489, 110.916},
        {"Mulholland", 1169.130, -910.170, -89.084, 1318.130, -768.027, 110.916},
        {"Julius Thruway North", 1938.800, 2508.230, -89.084, 2121.400, 2624.230, 110.916},
        {"Commerce", 1667.960, -1577.590, -89.084, 1812.620, -1430.870, 110.916},
        {"Rodeo", 72.648, -1544.170, -89.084, 225.165, -1404.970, 110.916},
        {"Roca Escalante", 2536.430, 2202.760, -89.084, 2625.160, 2442.550, 110.916},
        {"Rodeo", 72.648, -1684.650, -89.084, 225.165, -1544.170, 110.916},
        {"Market", 952.663, -1310.210, -89.084, 1072.660, -1130.850, 110.916},
        {"Las Colinas", 2632.740, -1135.040, -89.084, 2747.740, -945.035, 110.916},
        {"Mulholland", 861.085, -674.885, -89.084, 1156.550, -600.896, 110.916},
        {"King's", -2253.540, 373.539, -9.1, -1993.280, 458.411, 200.000},
        {"Redsands East", 1848.400, 2342.830, -89.084, 2011.940, 2478.490, 110.916},
        {"Downtown", -1580.010, 744.267, -6.1, -1499.890, 1025.980, 200.000},
        {"Conference Center", 1046.150, -1804.210, -89.084, 1323.900, -1722.260, 110.916},
        {"Richman", 647.557, -1118.280, -89.084, 787.461, -954.662, 110.916},
        {"Ocean Flats", -2994.490, 277.411, -9.1, -2867.850, 458.411, 200.000},
        {"Greenglass College", 964.391, 930.890, -89.084, 1166.530, 1044.690, 110.916},
        {"Glen Park", 1812.620, -1100.820, -89.084, 1994.330, -973.380, 110.916},
        {"LVA Freight Depot", 1375.600, 919.447, -89.084, 1457.370, 1203.280, 110.916},
        {"Regular Tom", -405.770, 1712.860, -3.0, -276.719, 1892.750, 200.000},
        {"Verona Beach", 1161.520, -1722.260, -89.084, 1323.900, -1577.590, 110.916},
        {"East Los Santos", 2281.450, -1372.040, -89.084, 2381.680, -1135.040, 110.916},
        {"Caligula's Palace", 2137.400, 1703.230, -89.084, 2437.390, 1783.230, 110.916},
        {"Idlewood", 1951.660, -1742.310, -89.084, 2124.660, -1602.310, 110.916},
        {"Pilgrim", 2624.400, 1383.230, -89.084, 2685.160, 1783.230, 110.916},
        {"Idlewood", 2124.660, -1742.310, -89.084, 2222.560, -1494.030, 110.916},
        {"Queens", -2533.040, 458.411, 0.000, -2329.310, 578.396, 200.000},
        {"Downtown", -1871.720, 1176.420, -4.5, -1620.300, 1274.260, 200.000},
        {"Commerce", 1583.500, -1722.260, -89.084, 1758.900, -1577.590, 110.916},
        {"East Los Santos", 2381.680, -1454.350, -89.084, 2462.130, -1135.040, 110.916},
        {"Marina", 647.712, -1577.590, -89.084, 807.922, -1416.250, 110.916},
        {"Richman", 72.648, -1404.970, -89.084, 225.165, -1235.070, 110.916},
        {"Vinewood", 647.712, -1416.250, -89.084, 787.461, -1227.280, 110.916},
        {"East Los Santos", 2222.560, -1628.530, -89.084, 2421.030, -1494.030, 110.916},
        {"Rodeo", 558.099, -1684.650, -89.084, 647.522, -1384.930, 110.916},
        {"Easter Tunnel", -1709.710, -833.034, -1.5, -1446.010, -730.118, 200.000},
        {"Rodeo", 466.223, -1385.070, -89.084, 647.522, -1235.070, 110.916},
        {"Redsands East", 1817.390, 2202.760, -89.084, 2011.940, 2342.830, 110.916},
        {"The Clown's Pocket", 2162.390, 1783.230, -89.084, 2437.390, 1883.230, 110.916},
        {"Idlewood", 1971.660, -1852.870, -89.084, 2222.560, -1742.310, 110.916},
        {"Montgomery Intersection", 1546.650, 208.164, 0.000, 1745.830, 347.457, 200.000},
        {"Willowfield", 2089.000, -2235.840, -89.084, 2201.820, -1989.900, 110.916},
        {"Temple", 952.663, -1130.840, -89.084, 1096.470, -937.184, 110.916},
        {"Prickle Pine", 1848.400, 2553.490, -89.084, 1938.800, 2863.230, 110.916},
        {"Los Santos International", 1400.970, -2669.260, -39.084, 2189.820, -2597.260, 60.916},
        {"Garver Bridge", -1213.910, 950.022, -89.084, -1087.930, 1178.930, 110.916},
        {"Garver Bridge", -1339.890, 828.129, -89.084, -1213.910, 1057.040, 110.916},
        {"Kincaid Bridge", -1339.890, 599.218, -89.084, -1213.910, 828.129, 110.916},
        {"Kincaid Bridge", -1213.910, 721.111, -89.084, -1087.930, 950.022, 110.916},
        {"Verona Beach", 930.221, -2006.780, -89.084, 1073.220, -1804.210, 110.916},
        {"Verdant Bluffs", 1073.220, -2006.780, -89.084, 1249.620, -1842.270, 110.916},
        {"Vinewood", 787.461, -1130.840, -89.084, 952.604, -954.662, 110.916},
        {"Vinewood", 787.461, -1310.210, -89.084, 952.663, -1130.840, 110.916},
        {"Commerce", 1463.900, -1577.590, -89.084, 1667.960, -1430.870, 110.916},
        {"Market", 787.461, -1416.250, -89.084, 1072.660, -1310.210, 110.916},
        {"Rockshore West", 2377.390, 596.349, -89.084, 2537.390, 788.894, 110.916},
        {"Julius Thruway North", 2237.400, 2542.550, -89.084, 2498.210, 2663.170, 110.916},
        {"East Beach", 2632.830, -1668.130, -89.084, 2747.740, -1393.420, 110.916},
        {"Fallow Bridge", 434.341, 366.572, 0.000, 603.035, 555.680, 200.000},
        {"Willowfield", 2089.000, -1989.900, -89.084, 2324.000, -1852.870, 110.916},
        {"Chinatown", -2274.170, 578.396, -7.6, -2078.670, 744.170, 200.000},
        {"El Castillo del Diablo", -208.570, 2337.180, 0.000, 8.430, 2487.180, 200.000},
        {"Ocean Docks", 2324.000, -2145.100, -89.084, 2703.580, -2059.230, 110.916},
        {"Easter Bay Chemicals", -1132.820, -768.027, 0.000, -956.476, -578.118, 200.000},
        {"The Visage", 1817.390, 1703.230, -89.084, 2027.400, 1863.230, 110.916},
        {"Ocean Flats", -2994.490, -430.276, -1.2, -2831.890, -222.589, 200.000},
        {"Richman", 321.356, -860.619, -89.084, 687.802, -768.027, 110.916},
        {"Green Palms", 176.581, 1305.450, -3.0, 338.658, 1520.720, 200.000},
        {"Richman", 321.356, -768.027, -89.084, 700.794, -674.885, 110.916},
        {"Starfish Casino", 2162.390, 1883.230, -89.084, 2437.390, 2012.180, 110.916},
        {"East Beach", 2747.740, -1668.130, -89.084, 2959.350, -1498.620, 110.916},
        {"Jefferson", 2056.860, -1372.040, -89.084, 2281.450, -1210.740, 110.916},
        {"Downtown Los Santos", 1463.900, -1290.870, -89.084, 1724.760, -1150.870, 110.916},
        {"Downtown Los Santos", 1463.900, -1430.870, -89.084, 1724.760, -1290.870, 110.916},
        {"Garver Bridge", -1499.890, 696.442, -179.615, -1339.890, 925.353, 20.385},
        {"Julius Thruway South", 1457.390, 823.228, -89.084, 2377.390, 863.229, 110.916},
        {"East Los Santos", 2421.030, -1628.530, -89.084, 2632.830, -1454.350, 110.916},
        {"Greenglass College", 964.391, 1044.690, -89.084, 1197.390, 1203.220, 110.916},
        {"Las Colinas", 2747.740, -1120.040, -89.084, 2959.350, -945.035, 110.916},
        {"Mulholland", 737.573, -768.027, -89.084, 1142.290, -674.885, 110.916},
        {"Ocean Docks", 2201.820, -2730.880, -89.084, 2324.000, -2418.330, 110.916},
        {"East Los Santos", 2462.130, -1454.350, -89.084, 2581.730, -1135.040, 110.916},
        {"Ganton", 2222.560, -1722.330, -89.084, 2632.830, -1628.530, 110.916},
        {"Avispa Country Club", -2831.890, -430.276, -6.1, -2646.400, -222.589, 200.000},
        {"Willowfield", 1970.620, -2179.250, -89.084, 2089.000, -1852.870, 110.916},
        {"Esplanade North", -1982.320, 1274.260, -4.5, -1524.240, 1358.900, 200.000},
        {"The High Roller", 1817.390, 1283.230, -89.084, 2027.390, 1469.230, 110.916},
        {"Ocean Docks", 2201.820, -2418.330, -89.084, 2324.000, -2095.000, 110.916},
        {"Last Dime Motel", 1823.080, 596.349, -89.084, 1997.220, 823.228, 110.916},
        {"Bayside Marina", -2353.170, 2275.790, 0.000, -2153.170, 2475.790, 200.000},
        {"King's", -2329.310, 458.411, -7.6, -1993.280, 578.396, 200.000},
        {"El Corona", 1692.620, -2179.250, -89.084, 1812.620, -1842.270, 110.916},
        {"Blackfield Chapel", 1375.600, 596.349, -89.084, 1558.090, 823.228, 110.916},
        {"The Pink Swan", 1817.390, 1083.230, -89.084, 2027.390, 1283.230, 110.916},
        {"Julius Thruway West", 1197.390, 1163.390, -89.084, 1236.630, 2243.230, 110.916},
        {"Los Flores", 2581.730, -1393.420, -89.084, 2747.740, -1135.040, 110.916},
        {"The Visage", 1817.390, 1863.230, -89.084, 2106.700, 2011.830, 110.916},
        {"Prickle Pine", 1938.800, 2624.230, -89.084, 2121.400, 2861.550, 110.916},
        {"Verona Beach", 851.449, -1804.210, -89.084, 1046.150, -1577.590, 110.916},
        {"Robada Intersection", -1119.010, 1178.930, -89.084, -862.025, 1351.450, 110.916},
        {"Linden Side", 2749.900, 943.235, -89.084, 2923.390, 1198.990, 110.916},
        {"Ocean Docks", 2703.580, -2302.330, -89.084, 2959.350, -2126.900, 110.916},
        {"Willowfield", 2324.000, -2059.230, -89.084, 2541.700, -1852.870, 110.916},
        {"King's", -2411.220, 265.243, -9.1, -1993.280, 373.539, 200.000},
        {"Commerce", 1323.900, -1842.270, -89.084, 1701.900, -1722.260, 110.916},
        {"Mulholland", 1269.130, -768.027, -89.084, 1414.070, -452.425, 110.916},
        {"Marina", 647.712, -1804.210, -89.084, 851.449, -1577.590, 110.916},
        {"Battery Point", -2741.070, 1268.410, -4.5, -2533.040, 1490.470, 200.000},
        {"The Four Dragons Casino", 1817.390, 863.232, -89.084, 2027.390, 1083.230, 110.916},
        {"Blackfield", 964.391, 1203.220, -89.084, 1197.390, 1403.220, 110.916},
        {"Julius Thruway North", 1534.560, 2433.230, -89.084, 1848.400, 2583.230, 110.916},
        {"Yellow Bell Gol Course", 1117.400, 2723.230, -89.084, 1457.460, 2863.230, 110.916},
        {"Idlewood", 1812.620, -1602.310, -89.084, 2124.660, -1449.670, 110.916},
        {"Redsands West", 1297.470, 2142.860, -89.084, 1777.390, 2243.230, 110.916},
        {"Doherty", -2270.040, -324.114, -1.2, -1794.920, -222.589, 200.000},
        {"Hilltop Farm", 967.383, -450.390, -3.0, 1176.780, -217.900, 200.000},
        {"Las Barrancas", -926.130, 1398.730, -3.0, -719.234, 1634.690, 200.000},
        {"Pirates in Men's Pants", 1817.390, 1469.230, -89.084, 2027.400, 1703.230, 110.916},
        {"City Hall", -2867.850, 277.411, -9.1, -2593.440, 458.411, 200.000},
        {"Avispa Country Club", -2646.400, -355.493, 0.000, -2270.040, -222.589, 200.000},
        {"The Strip", 2027.400, 863.229, -89.084, 2087.390, 1703.230, 110.916},
        {"Hashbury", -2593.440, -222.589, -1.0, -2411.220, 54.722, 200.000},
        {"Los Santos International", 1852.000, -2394.330, -89.084, 2089.000, -2179.250, 110.916},
        {"Whitewood Estates", 1098.310, 1726.220, -89.084, 1197.390, 2243.230, 110.916},
        {"Sherman Reservoir", -789.737, 1659.680, -89.084, -599.505, 1929.410, 110.916},
        {"El Corona", 1812.620, -2179.250, -89.084, 1970.620, -1852.870, 110.916},
        {"Downtown", -1700.010, 744.267, -6.1, -1580.010, 1176.520, 200.000},
        {"Foster Valley", -2178.690, -1250.970, 0.000, -1794.920, -1115.580, 200.000},
        {"Las Payasadas", -354.332, 2580.360, 2.0, -133.625, 2816.820, 200.000},
        {"Valle Ocultado", -936.668, 2611.440, 2.0, -715.961, 2847.900, 200.000},
        {"Blackfield Intersection", 1166.530, 795.010, -89.084, 1375.600, 1044.690, 110.916},
        {"Ganton", 2222.560, -1852.870, -89.084, 2632.830, -1722.330, 110.916},
        {"Easter Bay Airport", -1213.910, -730.118, 0.000, -1132.820, -50.096, 200.000},
        {"Redsands East", 1817.390, 2011.830, -89.084, 2106.700, 2202.760, 110.916},
        {"Esplanade East", -1499.890, 578.396, -79.615, -1339.890, 1274.260, 20.385},
        {"Caligula's Palace", 2087.390, 1543.230, -89.084, 2437.390, 1703.230, 110.916},
        {"Royal Casino", 2087.390, 1383.230, -89.084, 2437.390, 1543.230, 110.916},
        {"Richman", 72.648, -1235.070, -89.084, 321.356, -1008.150, 110.916},
        {"Starfish Casino", 2437.390, 1783.230, -89.084, 2685.160, 2012.180, 110.916},
        {"Mulholland", 1281.130, -452.425, -89.084, 1641.130, -290.913, 110.916},
        {"Downtown", -1982.320, 744.170, -6.1, -1871.720, 1274.260, 200.000},
        {"Hankypanky Point", 2576.920, 62.158, 0.000, 2759.250, 385.503, 200.000},
        {"K.A.C.C. Military Fuels", 2498.210, 2626.550, -89.084, 2749.900, 2861.550, 110.916},
        {"Harry Gold Parkway", 1777.390, 863.232, -89.084, 1817.390, 2342.830, 110.916},
        {"Bayside Tunnel", -2290.190, 2548.290, -89.084, -1950.190, 2723.290, 110.916},
        {"Ocean Docks", 2324.000, -2302.330, -89.084, 2703.580, -2145.100, 110.916},
        {"Richman", 321.356, -1044.070, -89.084, 647.557, -860.619, 110.916},
        {"Randolph Industrial Estate", 1558.090, 596.349, -89.084, 1823.080, 823.235, 110.916},
        {"East Beach", 2632.830, -1852.870, -89.084, 2959.350, -1668.130, 110.916},
        {"Flint Water", -314.426, -753.874, -89.084, -106.339, -463.073, 110.916},
        {"Blueberry", 19.607, -404.136, 3.8, 349.607, -220.137, 200.000},
        {"Linden Station", 2749.900, 1198.990, -89.084, 2923.390, 1548.990, 110.916},
        {"Glen Park", 1812.620, -1350.720, -89.084, 2056.860, -1100.820, 110.916},
        {"Downtown", -1993.280, 265.243, -9.1, -1794.920, 578.396, 200.000},
        {"Redsands West", 1377.390, 2243.230, -89.084, 1704.590, 2433.230, 110.916},
        {"Richman", 321.356, -1235.070, -89.084, 647.522, -1044.070, 110.916},
        {"Gant Bridge", -2741.450, 1659.680, -6.1, -2616.400, 2175.150, 200.000},
        {"Lil' Probe Inn", -90.218, 1286.850, -3.0, 153.859, 1554.120, 200.000},
        {"Flint Intersection", -187.700, -1596.760, -89.084, 17.063, -1276.600, 110.916},
        {"Las Colinas", 2281.450, -1135.040, -89.084, 2632.740, -945.035, 110.916},
        {"Sobell Rail Yards", 2749.900, 1548.990, -89.084, 2923.390, 1937.250, 110.916},
        {"The Emerald Isle", 2011.940, 2202.760, -89.084, 2237.400, 2508.230, 110.916},
        {"El Castillo del Diablo", -208.570, 2123.010, -7.6, 114.033, 2337.180, 200.000},
        {"Santa Flora", -2741.070, 458.411, -7.6, -2533.040, 793.411, 200.000},
        {"Playa del Seville", 2703.580, -2126.900, -89.084, 2959.350, -1852.870, 110.916},
        {"Market", 926.922, -1577.590, -89.084, 1370.850, -1416.250, 110.916},
        {"Queens", -2593.440, 54.722, 0.000, -2411.220, 458.411, 200.000},
        {"Pilson Intersection", 1098.390, 2243.230, -89.084, 1377.390, 2507.230, 110.916},
        {"Spinybed", 2121.400, 2663.170, -89.084, 2498.210, 2861.550, 110.916},
        {"Pilgrim", 2437.390, 1383.230, -89.084, 2624.400, 1783.230, 110.916},
        {"Blackfield", 964.391, 1403.220, -89.084, 1197.390, 1726.220, 110.916},
        {"'The Big Ear'", -410.020, 1403.340, -3.0, -137.969, 1681.230, 200.000},
        {"Dillimore", 580.794, -674.885, -9.5, 861.085, -404.790, 200.000},
        {"El Quebrados", -1645.230, 2498.520, 0.000, -1372.140, 2777.850, 200.000},
        {"Esplanade North", -2533.040, 1358.900, -4.5, -1996.660, 1501.210, 200.000},
        {"Easter Bay Airport", -1499.890, -50.096, -1.0, -1242.980, 249.904, 200.000},
        {"Fisher's Lagoon", 1916.990, -233.323, -100.000, 2131.720, 13.800, 200.000},
        {"Mulholland", 1414.070, -768.027, -89.084, 1667.610, -452.425, 110.916},
        {"East Beach", 2747.740, -1498.620, -89.084, 2959.350, -1120.040, 110.916},
        {"San Andreas Sound", 2450.390, 385.503, -100.000, 2759.250, 562.349, 200.000},
        {"Shady Creeks", -2030.120, -2174.890, -6.1, -1820.640, -1771.660, 200.000},
        {"Market", 1072.660, -1416.250, -89.084, 1370.850, -1130.850, 110.916},
        {"Rockshore West", 1997.220, 596.349, -89.084, 2377.390, 823.228, 110.916},
        {"Prickle Pine", 1534.560, 2583.230, -89.084, 1848.400, 2863.230, 110.916},
        {"Easter Basin", -1794.920, -50.096, -1.04, -1499.890, 249.904, 200.000},
        {"Leafy Hollow", -1166.970, -1856.030, 0.000, -815.624, -1602.070, 200.000},
        {"LVA Freight Depot", 1457.390, 863.229, -89.084, 1777.400, 1143.210, 110.916},
        {"Prickle Pine", 1117.400, 2507.230, -89.084, 1534.560, 2723.230, 110.916},
        {"Blueberry", 104.534, -220.137, 2.3, 349.607, 152.236, 200.000},
        {"El Castillo del Diablo", -464.515, 2217.680, 0.000, -208.570, 2580.360, 200.000},
        {"Downtown", -2078.670, 578.396, -7.6, -1499.890, 744.267, 200.000},
        {"Rockshore East", 2537.390, 676.549, -89.084, 2902.350, 943.235, 110.916},
        {"San Fierro Bay", -2616.400, 1501.210, -3.0, -1996.660, 1659.680, 200.000},
        {"Paradiso", -2741.070, 793.411, -6.1, -2533.040, 1268.410, 200.000},
        {"The Camel's Toe", 2087.390, 1203.230, -89.084, 2640.400, 1383.230, 110.916},
        {"Old Venturas Strip", 2162.390, 2012.180, -89.084, 2685.160, 2202.760, 110.916},
        {"Juniper Hill", -2533.040, 578.396, -7.6, -2274.170, 968.369, 200.000},
        {"Juniper Hollow", -2533.040, 968.369, -6.1, -2274.170, 1358.900, 200.000},
        {"Roca Escalante", 2237.400, 2202.760, -89.084, 2536.430, 2542.550, 110.916},
        {"Julius Thruway East", 2685.160, 1055.960, -89.084, 2749.900, 2626.550, 110.916},
        {"Verona Beach", 647.712, -2173.290, -89.084, 930.221, -1804.210, 110.916},
        {"Foster Valley", -2178.690, -599.884, -1.2, -1794.920, -324.114, 200.000},
        {"Arco del Oeste", -901.129, 2221.860, 0.000, -592.090, 2571.970, 200.000},
        {"Fallen Tree", -792.254, -698.555, -5.3, -452.404, -380.043, 200.000},
        {"The Farm", -1209.670, -1317.100, 114.981, -908.161, -787.391, 251.981},
        {"The Sherman Dam", -968.772, 1929.410, -3.0, -481.126, 2155.260, 200.000},
        {"Esplanade North", -1996.660, 1358.900, -4.5, -1524.240, 1592.510, 200.000},
        {"Financial", -1871.720, 744.170, -6.1, -1701.300, 1176.420, 300.000},
        {"Garcia", -2411.220, -222.589, -1.14, -2173.040, 265.243, 200.000},
        {"Montgomery", 1119.510, 119.526, -3.0, 1451.400, 493.323, 200.000},
        {"Creek", 2749.900, 1937.250, -89.084, 2921.620, 2669.790, 110.916},
        {"Los Santos International", 1249.620, -2394.330, -89.084, 1852.000, -2179.250, 110.916},
        {"Santa Maria Beach", 72.648, -2173.290, -89.084, 342.648, -1684.650, 110.916},
        {"Mulholland Intersection", 1463.900, -1150.870, -89.084, 1812.620, -768.027, 110.916},
        {"Angel Pine", -2324.940, -2584.290, -6.1, -1964.220, -2212.110, 200.000},
        {"Verdant Meadows", 37.032, 2337.180, -3.0, 435.988, 2677.900, 200.000},
        {"Octane Springs", 338.658, 1228.510, 0.000, 664.308, 1655.050, 200.000},
        {"Come-A-Lot", 2087.390, 943.235, -89.084, 2623.180, 1203.230, 110.916},
        {"Redsands West", 1236.630, 1883.110, -89.084, 1777.390, 2142.860, 110.916},
        {"Santa Maria Beach", 342.648, -2173.290, -89.084, 647.712, -1684.650, 110.916},
        {"Verdant Bluffs", 1249.620, -2179.250, -89.084, 1692.620, -1842.270, 110.916},
        {"Las Venturas Airport", 1236.630, 1203.280, -89.084, 1457.370, 1883.110, 110.916},
        {"Flint Range", -594.191, -1648.550, 0.000, -187.700, -1276.600, 200.000},
        {"Verdant Bluffs", 930.221, -2488.420, -89.084, 1249.620, -2006.780, 110.916},
        {"Palomino Creek", 2160.220, -149.004, 0.000, 2576.920, 228.322, 200.000},
        {"Ocean Docks", 2373.770, -2697.090, -89.084, 2809.220, -2330.460, 110.916},
        {"Easter Bay Airport", -1213.910, -50.096, -4.5, -947.980, 578.396, 200.000},
        {"Whitewood Estates", 883.308, 1726.220, -89.084, 1098.310, 2507.230, 110.916},
        {"Calton Heights", -2274.170, 744.170, -6.1, -1982.320, 1358.900, 200.000},
        {"Easter Basin", -1794.920, 249.904, -9.1, -1242.980, 578.396, 200.000},
        {"Los Santos Inlet", -321.744, -2224.430, -89.084, 44.615, -1724.430, 110.916},
        {"Doherty", -2173.040, -222.589, -1.0, -1794.920, 265.243, 200.000},
        {"Mount Chiliad", -2178.690, -2189.910, -47.917, -2030.120, -1771.660, 576.083},
        {"Fort Carson", -376.233, 826.326, -3.0, 123.717, 1220.440, 200.000},
        {"Foster Valley", -2178.690, -1115.580, 0.000, -1794.920, -599.884, 200.000},
        {"Ocean Flats", -2994.490, -222.589, -1.0, -2593.440, 277.411, 200.000},
        {"Fern Ridge", 508.189, -139.259, 0.000, 1306.660, 119.526, 200.000},
        {"Bayside", -2741.070, 2175.150, 0.000, -2353.170, 2722.790, 200.000},
        {"Las Venturas Airport", 1457.370, 1203.280, -89.084, 1777.390, 1883.110, 110.916},
        {"Blueberry Acres", -319.676, -220.137, 0.000, 104.534, 293.324, 200.000},
        {"Palisades", -2994.490, 458.411, -6.1, -2741.070, 1339.610, 200.000},
        {"North Rock", 2285.370, -768.027, 0.000, 2770.590, -269.740, 200.000},
        {"Hunter Quarry", 337.244, 710.840, -115.239, 860.554, 1031.710, 203.761},
        {"Los Santos International", 1382.730, -2730.880, -89.084, 2201.820, -2394.330, 110.916},
        {"Missionary Hill", -2994.490, -811.276, 0.000, -2178.690, -430.276, 200.000},
        {"San Fierro Bay", -2616.400, 1659.680, -3.0, -1996.660, 2175.150, 200.000},
        {"Restricted Area", -91.586, 1655.050, -50.000, 421.234, 2123.010, 250.000},
        {"Mount Chiliad", -2997.470, -1115.580, -47.917, -2178.690, -971.913, 576.083},
        {"Mount Chiliad", -2178.690, -1771.660, -47.917, -1936.120, -1250.970, 576.083},
        {"Easter Bay Airport", -1794.920, -730.118, -3.0, -1213.910, -50.096, 200.000},
        {"The Panopticon", -947.980, -304.320, -1.1, -319.676, 327.071, 200.000},
        {"Shady Creeks", -1820.640, -2643.680, -8.0, -1226.780, -1771.660, 200.000},
        {"Back o Beyond", -1166.970, -2641.190, 0.000, -321.744, -1856.030, 200.000},
        {"Mount Chiliad", -2994.490, -2189.910, -47.917, -2178.690, -1115.580, 576.083},
        {"Tierra Robada", -1213.910, 596.349, -242.990, -480.539, 1659.680, 900.000},
        {"Flint County", -1213.910, -2892.970, -242.990, 44.615, -768.027, 900.000},
        {"Whetstone", -2997.470, -2892.970, -242.990, -1213.910, -1115.580, 900.000},
        {"Bone County", -480.539, 596.349, -242.990, 869.461, 2993.870, 900.000},
        {"Tierra Robada", -2997.470, 1659.680, -242.990, -480.539, 2993.870, 900.000},
        {"San Fierro", -2997.470, -1115.580, -242.990, -1213.910, 1659.680, 900.000},
        {"Las Venturas", 869.461, 596.349, -242.990, 2997.060, 2993.870, 900.000},
        {"Red County", -1213.910, -768.027, -242.990, 2997.060, 596.349, 900.000},
        {"Los Santos", 44.615, -2892.970, -242.990, 2997.060, -768.027, 900.000}
    }
    for i, v in ipairs(streets) do
        if (x >= v[2]) and (y >= v[3]) and (z >= v[4]) and (x <= v[5]) and (y <= v[6]) and (z <= v[7]) then
            return v[1]
        end
    end
    return 'Неизвестно'
end

function util.TranslateNick(name)
	if name:match("%a+") then
		for k, v in pairs({
			["ph"] = "ф",
			["Ph"] = "Ф",
			["Ch"] = "Ч",
			["ch"] = "ч",
			["Th"] = "Т",
			["th"] = "т",
			["Sh"] = "Ш",
			["sh"] = "ш",
			["ea"] = "и",
			["Ae"] = "Э",
			["ae"] = "э",
			["size"] = "сайз",
			["Jj"] = "Джейджей",
			["Whi"] = "Вай",
			["lack"] = "лэк",
			["whi"] = "вай",
			["Ck"] = "К",
			["ck"] = "к",
			["Kh"] = "Х",
			["kh"] = "х",
			["hn"] = "н",
			["Hen"] = "Ген",
			["Zh"] = "Ж",
			["zh"] = "ж",
			["Yu"] = "Ю",
			["yu"] = "ю",
			["Yo"] = "Ё",
			["yo"] = "ё",
			["Cz"] = "Ц",
			["cz"] = "ц",
			["ia"] = "я",
			["ea"] = "и",
			["Ya"] = "Я",
			["ya"] = "я",
			["ove"] = "ав",
			["ay"] = "эй",
			["rise"] = "райз",
			["oo"] = "у",
			["Oo"] = "У",
			["Ee"] = "И",
			["ee"] = "и",
			["Un"] = "Ан",
			["un"] = "ан",
			["Ci"] = "Ци",
			["ci"] = "ци",
			["yse"] = "уз",
			["cate"] = "кейт",
			["eow"] = "яу",
			["rown"] = "раун",
			["yev"] = "уев",
			["Babe"] = "Бэйби",
			["Jason"] = "Джейсон",
			["liy"] = "лий",
			["ane"] = "ейн",
			["ame"] = "ейм",
		}) do
			name = name:gsub(k, v)
		end
		for k, v in pairs({
			["B"] = "Б",
			["Z"] = "З",
			["T"] = "Т",
			["Y"] = "Й",
			["P"] = "П",
			["J"] = "Дж",
			["X"] = "Кс",
			["G"] = "Г",
			["V"] = "В",
			["H"] = "Х",
			["N"] = "Н",
			["E"] = "Е",
			["I"] = "И",
			["D"] = "Д",
			["O"] = "О",
			["K"] = "К",
			["F"] = "Ф",
			["y`"] = "ы",
			["e`"] = "э",
			["A"] = "А",
			["C"] = "К",
			["L"] = "Л",
			["M"] = "М",
			["W"] = "В",
			["Q"] = "К",
			["U"] = "А",
			["R"] = "Р",
			["S"] = "С",
			["zm"] = "зьм",
			["h"] = "х",
			["q"] = "к",
			["y"] = "и",
			["a"] = "а",
			["w"] = "в",
			["b"] = "б",
			["v"] = "в",
			["g"] = "г",
			["d"] = "д",
			["e"] = "е",
			["z"] = "з",
			["i"] = "и",
			["j"] = "ж",
			["k"] = "к",
			["l"] = "л",
			["m"] = "м",
			["n"] = "н",
			["o"] = "о",
			["p"] = "п",
			["r"] = "р",
			["s"] = "с",
			["t"] = "т",
			["u"] = "у",
			["f"] = "ф",
			["x"] = "x",
			["c"] = "к",
			["``"] = "ъ",
			["`"] = "ь",
			["_"] = " ",
		}) do
			name = name:gsub(k, v)
		end
		return name
	end
	return name
end

function util.tblContainsFieldValue(tbl, field, value)
	for k, v in pairs(tbl) do
		if v[field] == value then
			return true
		end
	end
	return false
end


util.arzcars = {[400]="Landstalker",[401]="Bravura",[402]="Buffalo",[403]="Linerunner",[404]="Perenniel",[405]="Sentinel",[406]="Dumper",[407]="Firetruck",[408]="Trashmaster",[409]="Stretch",[410]="Manana",[411]="Infernus",[412]="Voodoo",[413]="Pony",[414]="Mule",[415]="Cheetah",[416]="Ambulance",[417]="Leviathan",[418]="Moonbeam",[419]="Esperanto",[420]="Taxi",[421]="Washington",[422]="Bobcat",[423]="Mr Whoopee",[424]="BF Injection",[425]="Hunter",[426]="Premier",[427]="Enforcer",[428]="Securicar",[429]="Banshee",[430]="Predator",[431]="Bus",[432]="Rhino",[433]="Barracks",[434]="Hotknife",[435]="Article Trailer",[436]="Previon",[437]="Coach",[438]="Cabbie",[439]="Stallion",[440]="Rumpo",[441]="RC Bandit",[442]="Romero",[443]="Packer",[444]="Monster",[445]="Admiral",[446]="Squallo",[447]="Seasparrow",[448]="Pizzaboy",[449]="Tram",[450]="Article Trailer 2",[451]="Turismo",[452]="Speeder",[453]="Reefer",[454]="Tropic",[455]="Flatbed",[456]="Yankee",[457]="Caddy",[458]="Solair",[459]="Berkley's RC",[460]="Skimmer",[461]="PCJ-600",[462]="Faggio",[463]="Freeway",[464]="RC Baron",[465]="RC Raider",[466]="Glendale",[467]="Oceanic",[468]="Sanchez",[469]="Sparrow",[470]="Patriot",[471]="Quad",[472]="Coastguard",[473]="Dinghy",[474]="Hermes",[475]="Sabre",[476]="Rustler",[477]="ZR-350",[478]="Walton",[479]="Regina",[480]="Comet",[481]="BMX",[482]="Burrito",[483]="Camper",[484]="Marquis",[485]="Baggage",[486]="Dozer",[487]="Maverick",[488]="SAN News Maverick",[489]="Rancher",[490]="FBI Rancher",[491]="Virgo",[492]="Greenwood",[493]="Jetmax",[494]="Hotring Racer",[495]="Sandking",[496]="Blista Compact",[497]="Police Maverick",[498]="Boxville",[499]="Benson",[500]="Mesa",[501]="RC Goblin",[502]="Hotring Racer A",[503]="Hotring Racer B",[504]="Bloodring Banger",[505]="Rancher",[506]="Super GT",[507]="Elegant",[508]="Journey",[509]="Bike",[510]="Mountain Bike",[511]="Beagle",[512]="Cropduster",[513]="Stuntplane",[514]="Tanker",[515]="Roadtrain",[516]="Nebula",[517]="Majestic",[518]="Buccaneer",[519]="Shamal",[520]="Hydra",[521]="FCR-900",[522]="NRG-500",[523]="HPV1000",[524]="Cement Truck",[525]="Towtruck",[526]="Fortune",[527]="Cadrona",[528]="FBI Truck",[529]="Willard",[530]="Forklift",[531]="Tractor",[532]="Combine Harvester",[533]="Feltzer",[534]="Remington",[535]="Slamvan",[536]="Blade",[537]="Freight (Train)",[538]="Brownstreak (Train)",[539]="Vortex",[540]="Vincent",[541]="Bullet",[542]="Clover",[543]="Sadler",[544]="Firetruck LA",[545]="Hustler",[546]="Intruder",[547]="Primo",[548]="Cargobob",[549]="Tampa",[550]="Sunrise",[551]="Merit",[552]="Utility Van",[553]="Nevada",[554]="Yosemite",[555]="Windsor",[556]="Monster A",[557]="Monster B",[558]="Uranus",[559]="Jester",[560]="Sultan",[561]="Stratum",[562]="Elegy",[563]="Raindance",[564]="RC Tiger",[565]="Flash",[566]="Tahoma",[567]="Savanna",[568]="Bandito",[569]="Freight Flat Trailer",[570]="Streak Trailer",[571]="Kart",[572]="Mower",[573]="Dune",[574]="Sweeper",[575]="Broadway",[576]="Tornado",[577]="AT400",[578]="DFT-30",[579]="Huntley",[580]="Stafford",[581]="BF-400",[582]="Newsvan",[583]="Tug",[584]="Petrol Trailer",[585]="Emperor",[586]="Wayfarer",[587]="Euros",[588]="Hotdog",[589]="Club",[590]="Freight Box Trailer",[591]="Article Trailer 3",[592]="Andromada",[593]="Dodo",[594]="RC Cam",[595]="Launch",[596]="Police Car (LSPD)",[597]="Police Car (SFPD)",[598]="Police Car (LVPD)",[599]="Police Ranger",[600]="Picador",[601]="S.W.A.T.",[602]="Alpha",[603]="Phoenix",[604]="Glendale Shit",[605]="Sadler Shit",[606]="Baggage Trailer A",[607]="Baggage Trailer B",[608]="Tug Stairs Trailer",[609]="Boxville",[610]="Farm Trailer",[611]="Utility Trailer",[612]="Ferrari 612 Scaglietti GTS",[613]="Mercedes-Benz G63 AMG",[614]="Audi RS6",[662]="BMW X5",[663]="Chevrolet Corvette",[665]="Chevrolet Cruze",[666]="Lexus LX",[667]="Porsche 911",[668]="Porsche Cayenne",[699]="Bentley Continental GT",[793]="BMW M8",[794]="Mercedes-Benz E63 AMG",[909]="Mercedes-Benz S63 AMG",[965]="Volkswagen Touareg",[1194]="Lamborghini Urus",[1195]="Audi R8",[1196]="Dodge Challenger",[1197]="Acura NSX",[1198]="Volvo V60",[1199]="Range Rover",[1200]="Honda Civic Type R",[1201]="Lexus IS",[1202]="Ford Mustang",[1203]="Volvo XC90",[1204]="Jaguar F-PACE",[1205]="Kia Optima",[3155]="BMW Z4",[3156]="Lamborghini Aventador SVJ",[3157]="BMW X5 M",[3158]="Nissan GT-R R34",[3194]="Ducati Diavel",[3195]="Ducati Monster",[3196]="Ducati Monster Naked",[3197]="Kawasaki Ninja ZX-10RR",[3198]="Kawasaki W800",[3199]="BMW S1000RR",[3200]="Volkswagen Beetle",[3201]="Bugatti Divo",[3202]="Bugatti Chiron",[3203]="Fiat 500",[3204]="Mercedes-Benz GLS 2020",[3205]="Huntley S",[3206]="Lamborghini Sesto Elemento",[3207]="Land Rover Range Rover Sport",[3208]="BMW 530i",[3209]="Mercedes-Benz S-Class (W221)",[3210]="Tesla Model X",[3211]="Nissan Leaf",[3212]="Nissan Silvia",[3213]="Bravado Banshee 900R",[3215]="Benefactor Schafter V12 (Armored)",[3216]="Hyundai Sonata",[3217]="BMW 7 Series (E38)",[3218]="Mercedes-Benz E55 AMG",[3219]="Mercedes-Benz 500E",[3220]="Dewbauchee Rapid GT",[3222]="Pegassi Tempesta",[3223]="Lexus RX",[3224]="Truffade Nero Custom",[3232]="Infiniti Q50",[3233]="Lexus RX 350",[3234]="Kia Sportage",[3235]="Volkswagen Golf GTI",[3236]="Audi R8 Coupe V10 plus",[3237]="Toyota Camry",[3238]="Toyota Camry",[3239]="BMW M5 E60",[3240]="BMW M5 F90",[3245]="Maybach",[3247]="Mercedes-Benz AMG GT",[3248]="Porsche Panamera",[3251]="Volkswagen Passat",[3254]="Chevrolet Corvette 1980",[3266]="Dodge SRT",[3348]="Ford Mustang Shelby GT500",[3974]="Aston Martin DB5",[4542]="BMW M3 GTR",[4543]="Chevrolet Camaro SS",[4544]="Mazda RX-7",[4545]="Mazda RX-8",[4546]="Mitsubishi Eclipse",[4547]="Ford Mustang old",[4548]="Nissan 350Z",[4774]="BMW 760Li",[4775]="Aston Martin One-77",[4776]="Bentley Bacalar",[4777]="Bentley Bentayga",[4778]="BMW M4 Competition",[4779]="BMW i8",[4780]="Koenigsegg CCXR Trevita",[4781]="Integrity IH 35",[4782]="BMW M3 G20",[4783]="Mercedes-Benz S500 W223",[4784]="Rimac C_Two",[4785]="Ferrari J50",[4786]="Mercedes-Benz SLR McLaren",[4787]="Subaru BRZ",[4788]="Subaru Crosstrek",[4789]="Porsche Taycan",[4790]="Tesla Roadster",[4791]="UAZ Patriot",[4792]="GAZ Volga",[4793]="Mercedes-Benz X-Class",[4794]="Jaguar XFR-R 2012",[4795]="Rolls-Royce Shuttle",[4796]="Dodge Viper",[4797]="Chrysler Crossfire SRT6",[4798]="Ford Expedition",[4799]="Ford F-150",[4800]="DeLorean DMC-12",[4801]="Speedophile Seashark",[4802]="Grotti Cheetah Classic",[4803]="Ferrari FXX K",[6604]="Audi A6",[6605]="Audi Q7",[6606]="BMW M6",[6607]="BMW M6",[6608]="Mercedes-Benz CLA 45 AMG",[6609]="Mercedes-Benz CLS",[6610]="Haval H2",[6611]="Toyota Land Cruiser 200",[6612]="Lincoln Continental",[6613]="Porsche Macan",[6614]="Daewoo Matiz",[6615]="Mercedes-Benz G63 AMG 6x6",[6616]="Mercedes-Benz E63 AMG",[6617]="Monster Truck 1",[6618]="Monster Truck 2",[6619]="Monster Truck 3",[6620]="Monster Truck 4",[6621]="Toyota Land Cruiser Prado",[6622]="Toyota RAV4",[6623]="Toyota Supra MK4",[6624]="UAZ 469",[6625]="Volvo XC90",[12713]="Mercedes-Benz SLS AMG GT3",[12714]="Renault Laguna",[12715]="Mercedes-Benz CLS 63 AMG",[12716]="Audi RS5",[12717]="Cadillac Escalade ESV",[12718]="Tesla Cybertruck",[12719]="Tesla Model C",[12720]="Ford GT",[12721]="Dodge Viper",[12722]="Volkswagen Polo",[12723]="Mitsubishi Lancer Evolution X",[12724]="Audi TT RS",[12725]="Mercedes-Benz Actros",[12726]="Holden Commodore (VF) SSV Redline",[12727]="BMW 435i",[12728]="Cadillac Escalade GMT900",[12729]="Toyota Chaser Tourer V",[12730]="Dacia Duster",[12731]="Mitsubishi Lancer Evolution X",[12732]="Chevrolet Impala 1964",[12733]="Chevrolet Impala 1967",[12734]="Kenworth T680",[12735]="Kenworth W900L",[12736]="McLaren MP4-12C",[12737]="Ford Mustang Mach 1",[12738]="Rolls-Royce Phantom",[12739]="Chevrolet Silverado Pickup",[12740]="Volvo VNL 780",[12741]="Subaru Impreza WRX STI",[12742]="Sherp ATV",[12743]="ZIL-130",[14119]="Audi A6 Avant",[14120]="Dodge Challenger SRT Demon",[14121]="Kia Stinger GT",[14122]="Lada Priora",[14123]="Toyota RAV4 2016",[14124]="Nissan GT-R Nismo",[14767]="Aston Martin One-77",[14768]="Aston Martin Valkyrie",[14769]="Chevrolet Aveo",[14857]="Volkswagen Buggy",[14884]="Volkswagen Buggy",[14899]="Dacia Duster",[14904]="Chevrolet Monza",[14905]="Mercedes-Benz G63 AMG 6x6",[14906]="Hot Wheels Twin Mill",[14907]="Hummer HX Concept",[14908]="Ferrari LaFerrari",[14909]="BMW M5 Competition",[14910]="Lada Priora",[14911]="QuaDra Q2",[14912]="Mercedes-Benz GLE 450 AMG Coupe",[14913]="Vision GT",[14914]="Mountain Bike",[14915]="Mountain Bike 2",[14916]="MTB",[14917]="Scorcher",[14918]="Bus",[14919]="Bus 2",[15085]="Dodge Charger SRT Hellcat",[15098]="BMW M1",[15099]="Lamborghini Countach",[15100]="Nagasaki Carbon RS",[15101]="Koenigsegg Gemera",[15102]="Kia K7",[15103]="Grotti Toro",[15104]="Lexus LX 600",[15105]="Nissan Qashqai",[15106]="Grotti Itali RSX",[15107]="Volkswagen Scirocco",[15108]="Benefactor Schlagen GT",[15109]="Toyota GR Yaris",[15110]="Wellcraft Scarab",[15111]="Pegassi Yacht",[15112]="Speedophile Seashark",[15113]="Mercedes-AMG A 45",[15114]="Toyota AE86",[15115]="Land Rover Defender",[15116]="Dewbauchee Vagner",[15117]="Mazda 6",[15118]="Audi R8 Spyder",[15119]="Hyundai Santa Fe",[15295]="Range Rover Velar",[15326]="Mercedes-Benz Actros 1620",[15327]="Topfun Van",[15328]="Mule",[15329]="Luxor Deluxe",[15330]="Nimbus",[15331]="Vestra",[15332]="Mercedes-Benz Arocs",[15333]="Iveco Stralis",[15334]="MAN TGS",[15335]="Volvo FH16",[15416]="Ambulance",[15417]="Banshee",[15418]="Benson",[15419]="Bloodring Banger",[15420]="Coach",[15421]="Cabbie",[15422]="Police Car (VCPD)",[15423]="Deluxo",[15424]="FBI Rancher",[15425]="Flatbed",[15426]="Idaho",[15427]="Infernus",[15428]="Love Fist",[15429]="Patriot",[15430]="Pizza Boy",[15431]="Securicar",[15432]="Sentinel",[15433]="Stinger",[15434]="Stretch",[15435]="Taxi",[15436]="Trashmaster",[15485]="Angel",[15486]="BF Injection",[15487]="Blista Compact",[15488]="Burrito",[15489]="Police Car(VCPD)",[15490]="Hotring Racer",[15491]="Sabre",[15492]="Sanchez",[15493]="Ambulance",[15494]="Tesla Model S",[15495]="BMW iX",[15496]="Mercedes-Benz EQC",[15497]="Audi e-tron",[15498]="Jaguar I-PACE",[15499]="Polestar 2",[15500]="Polestar 2",[15501]="Renault Twizy",[15502]="Polestar 1",[15720]="Artega GTs",[15721]="Mercedes-Benz GLE",[15722]="Tesla Model 3",[15723]="Lamborghini Murci?lago",[15724]="Hummer H2",[15725]="JMC Boarding",[15626]="Mercedes-Benz G-Class G 63 AMG",[15627]="BMW 7 Series",[15628]="Mercedes-Benz V-Class",[15629]="Mercedes-Benz C-Class",[15630]="Mercedes-Benz C-Class C 63 AMG",[15631]="Audi RS7 Sportback",[15746]="Mazda RX-7",[15747]="BMW X6",[15748]="Jeep Gladiator",[15749]="BMW M8",[15750]="Volkswagen Touareg",[15751]="Land Rover Defender",[15752]="Mercedes-Benz S-Class S 63 AMG",[15858]="Mercedes-Benz C-Class C 63 AMG",[15859]="BMW M5 F10",[15860]="BMW 3 Series E30",[15861]="Volkswagen Transporter",[15862]="Mercedes-Benz Vito",[15863]="Opel Vivaro",[15882]="Boosted Board Skateboard",[15883]="Surfboard",[15902]="Audi 80",[15903]="Mercedes-Benz C-Class C 63 AMG Coupe",[15904]="BMW 5 Series E34",[15905]="Mercedes-Benz E-Class E 63 AMG Wagon",[15906]="BMW X5 M F85",[15907]="Lamborghini Gallardo",[15908]="Mercedes-Benz GLE",[15909]="BMW M8 (Old Model)",[15910]="Renault Sport Formula One Team R.S.18"}
util.VehicleColoursRussianTable = {[0]="Черный",[1]="Серебристый",[2]="Синий",[3]="Красный",[4]="Темно-зеленый",[5]="Фиолетовый",[6]="Оранжевый",[7]="Светло-синий",[8]="Светло-зеленый",[9]="Серый",[10]="Темно-синий",[11]="Серый",[12]="Синий",[13]="Серый",[14]="Светло-серый",[15]="Светло-бежевый",[16]="Темно-зеленый",[17]="Бордовый",[18]="Темно-бордовый",[19]="Коричневый",[20]="Темно-синий",[21]="Темно-серый",[22]="Темно-бордовый",[23]="Коричневый",[24]="Серый",[25]="Темно-серый",[26]="Светло-серый",[27]="Серый",[28]="Темно-синий",[29]="Коричневый",[30]="Темно-бордовый",[31]="Темно-коричневый",[32]="Синий",[33]="Серый",[34]="Темно-серый",[35]="Серый",[36]="Темно-серый",[37]="Серый",[38]="Светло-коричневый",[39]="Серый",[40]="Темно-бордовый",[41]="Серый",[42]="Темно-бордовый",[43]="Темно-коричневый",[44]="Темно-зеленый",[45]="Темно-бордовый",[46]="Бежевый",[47]="Серый",[48]="Коричневый",[49]="Светло-серый",[50]="Серый",[51]="Темно-зеленый",[52]="Серый",[53]="Темно-синий",[54]="Темно-фиолетовый",[55]="Серый",[56]="Светло-коричневый",[57]="Бежевый",[58]="Темно-бордовый",[59]="Темно-синий",[60]="Светло-серый",[61]="Коричневый",[62]="Темно-бордовый",[63]="Светло-серый",[64]="Светло-бежевый",[65]="Оранжевый",[66]="Темно-бордовый",[67]="Серый",[68]="Светло-фиолетовый",[69]="Бежевый",[70]="Темно-бордовый",[71]="Серый",[72]="Темно-серый",[73]="Светло-коричневый",[74]="Темно-бордовый",[75]="Темно-серый",[76]="Светло-бежевый",[77]="Бежевый",[78]="Темно-бордовый",[79]="Темно-фиолетовый",[80]="Серый",[81]="Серый",[82]="Темно-бордовый",[83]="Темно-серый",[84]="Темно-коричневый",[85]="Темно-бордовый",[86]="Темно-зеленый",[87]="Темно-синий",[88]="Серый",[89]="Светло-бежевый",[90]="Светло-серый",[91]="Темно-синий",[92]="Серый",[93]="Темно-фиолетовый",[94]="Темно-синий",[95]="Темно-фиолетовый",[96]="Светло-серый",[97]="Серый",[98]="Темно-синий",[99]="Светло-коричневый",[100]="Темно-синий",[101]="Темно-фиолетовый",[102]="Бежевый",[103]="Темно-синий",[104]="Коричневый",[105]="Серый",[106]="Темно-синий",[107]="Светло-бежевый",[108]="Темно-синий",[109]="Серый",[110]="Серый",[111]="Светло-серый",[112]="Серый",[113]="Темно-коричневый",[114]="Темно-серый",[115]="Темно-бордовый",[116]="Темно-фиолетовый",[117]="Темно-бордовый",[118]="Светло-синий",[119]="Серый",[120]="Светло-серый",[121]="Темно-бордовый",[122]="Серый",[123]="Темно-коричневый",[124]="Темно-бордовый",[125]="Темно-фиолетовый",[126]="Розовый",[127]="Черный",[128]="Темно-зеленый",[129]="Темно-бордовый",[130]="Темно-синий",[131]="Темно-коричневый",[132]="Темно-бордовый",[133]="Темно-зеленый",[134]="Темно-фиолетовый",[135]="Синий",[136]="Фиолетовый",[137]="Темно-зеленый",[138]="Светло-серый",[139]="Темно-синий",[140]="Серый",[141]="Серый",[142]="Коричневый",[143]="Серый",[144]="Темно-синий",[145]="Светло-зеленый",[146]="Розовый",[147]="Темно-бордовый",[148]="Темно-серый",[149]="Темно-коричневый",[150]="Темно-бордовый",[151]="Темно-зеленый",[152]="Темно-синий",[153]="Темно-зеленый",[154]="Темно-синий",[155]="Светло-серый",[156]="Бежевый",[157]="Серый",[158]="Темно-бордовый",[159]="Темно-коричневый",[160]="Темно-зеленый",[161]="Темно-синий",[162]="Темно-синий",[163]="Светло-серый",[164]="Темно-фиолетовый",[165]="Серый",[166]="Серый",[167]="Темно-синий",[168]="Темно-синий",[169]="Серый",[170]="Серый",[171]="Темно-синий",[172]="Темно-зеленый",[173]="Темно-коричневый",[174]="Темно-синий",[175]="Темно-бордовый",[176]="Синий",[177]="Серый",[178]="Темно-синий",[179]="Темно-бордовый",[180]="Темно-коричневый",[181]="Темно-серый",[182]="Темно-бордовый",[183]="Темно-коричневый",[184]="Серый",[185]="Серый",[186]="Темно-зеленый",[187]="Темно-зеленый",[188]="Темно-коричневый",[189]="Темно-фиолетовый",[190]="Темно-синий",[191]="Темно-зеленый",[192]="Светло-серый",[193]="Серый",[194]="Темно-бордовый",[195]="Темно-зеленый",[196]="Серый",[197]="Коричневый",[198]="Темно-синий",[199]="Темно-серый",[200]="Серый",[201]="Темно-фиолетовый",[202]="Темно-коричневый",[203]="Темно-фиолетовый",[204]="Серый",[205]="Темно-синий",[206]="Темно-фиолетовый",[207]="Темно-синий",[208]="Темно-фиолетовый",[209]="Темно-синий",[210]="Темно-фиолетовый",[211]="Темно-синий",[212]="Темно-коричневый",[213]="Серый",[214]="Темно-коричневый",[215]="Темно-зеленый",[216]="Темно-коричневый",[217]="Синий",[218]="Бежевый",[219]="Темно-бордовый",[220]="Розовый",[221]="Желтый",[222]="Оранжевый",[223]="Темно-синий",[224]="Темно-бордовый",[225]="Темно-желтый",[226]="Зеленый",[227]="Темно-зеленый",[228]="Светло-оранжевый",[229]="Зеленый",[230]="Коричневый",[231]="Оранжевый",[232]="Розовый",[233]="Светло-розовый",[234]="Темно-зеленый",[235]="Темно-зеленый",[236]="Темно-серый",[237]="Розовый",[238]="Оранжевый",[239]="Оранжевый",[240]="Светло-голубой",[241]="Светло-зеленый",[242]="Бордовый",[243]="Зеленый",[244]="Коричневый",[245]="Темно-зеленый",[246]="Голубой",[247]="Серый",[248]="Бордовый",[249]="Бордовый",[250]="Белый",[251]="Серый",[252]="Серый",[253]="Белый",[254]="Светло-коричневый",[255]="Темно-синий"}

function util.inflectColorName(color)
	local endings = {
		["ый"] = "ого",
		["ий"] = "его",
		["ой"] = "ого",
		["ый"] = "ого",
		["ая"] = "ой",
		["ое"] = "ого",
		["ие"] = "их",
	}

	local lastTwoLetters = string.sub(color, -2)

	local newEnding = endings[lastTwoLetters]

	if newEnding then
		return string.sub(color, 1, -3) .. newEnding
	else
		local lastLetter = string.sub(color, -1)
		local newEnding = endings[lastLetter]

		if newEnding then
			return string.sub(color, 1, -2) .. newEnding
		else
			return color
		end
	end
end

function util.version(ver)
    local major, minor, patch = ver:match("(%d+)%.(%d+)%.(%d+)")
    local version = {
        major = tonumber(major),
        minor = tonumber(minor),
        patch = tonumber(patch),
    }

    function version:tonumber()
        return self.major * 10000 + self.minor * 100 + self.patch
    end

    return version
end

---@class Thread
---@field runner fun(...): any
---@field thread table
---@field run fun(self, ...)
---@field listen fun(self, res: fun(any), rej: fun(err: string, stacktrace: string?))

---@param func fun(...): boolean, any
---@return Thread
function util.newThread(func)
	local effil = require("effil")
	if type(func) ~= "function" then
		error("Expected function, got " .. type(func))
	end

	local h = {
		runner = effil.thread(func),
	}

	function h:run(...)
		self.thread = self.runner(...)
	end

	---@param res? fun(any)
	---@param rej? fun(err:string, stacktrace:string?)
	---@return table
	function h:listen(res, rej)
		res = res or function() end
		rej = rej or function(err)
			print(err)
		end

		if not self.thread then
			error("Run thread first.")
		end
		lua_thread.create(function()
			while self.thread:status() == "running" do
				wait(0)
			end
			local status, err, stack = self.thread:status()
			if status == "failed" then
				rej(err, stack)
				return
			end

			local success, result = self.thread:get()
			if success then
				res(result)
			else
				rej(result)
			end
		end)
	end

	return h
end

---Скачивает асинхронно файл из URL в указанный путь
---@param url string @URL
---@param path string @Путь к файлу, в который будет сохранен скачанный файл
---@param callback? fun(type: "downloading"|"finished"|"error", pos: number, total_size?: number) @Функция, которая будет вызвана при изменении прогресса скачивания или завершении
---@param progressInterval? number @Интервал в секундах между вызовами callback, по умолчанию 0.1
function util.downloadToFile(url, path, callback, progressInterval)
	callback = callback or function() end
	progressInterval = progressInterval or 0.1

	if not MONET_VERSION then
		local dlstatus = require('moonloader').download_status
---@diagnostic disable-next-line: deprecated
		return downloadUrlToFile(url, path, function(id, status, p1, p2)
			if status == dlstatus.STATUS_DOWNLOADINGDATA then
				callback("downloading", p1, p2)
			elseif status == dlstatus.STATUS_ENDDOWNLOADDATA then
				callback("finished", p1)
			end
		end)
	end

	local effil = require("effil")
	local progressChannel = effil.channel(0)

	local runner = effil.thread(function(url, path)
		local http = require("socket.http")
		local ltn = require("ltn12")

		local r, c, h = http.request({
			method = "HEAD",
			url = url,
		})

		if c ~= 200 then
			return false, c
		end
		local total_size = h["content-length"]

		local f = io.open(path, "w+b")
		if not f then
			return false, "failed to open file"
		end
		local success, res, status_code = pcall(http.request, {
			method = "GET",
			url = url,
			sink = function(chunk, err)
				local clock = os.clock()
				if chunk and not lastProgress or (clock - lastProgress) >= progressInterval then
					progressChannel:push("downloading", f:seek("end"), total_size)
					lastProgress = os.clock()
				elseif err then
					progressChannel:push("error", err)
				end

				return ltn.sink.file(f)(chunk, err)
			end,
		})

		if not success then
			return false, res
		end

		if not res then
			return false, status_code
		end

		return true, total_size
	end)
	local thread = runner(url, path)

	local function checkStatus()
		local tstatus = thread:status()
		if tstatus == "failed" or tstatus == "completed" then
			local result, value = thread:get()

			if result then
				callback("finished", value)
			else
				callback("error", value)
			end

			return true
		end
	end

	lua_thread.create(function()
		if checkStatus() then
			return
		end

		while thread:status() == "running" do
			if progressChannel:size() > 0 then
				local type, pos, total_size = progressChannel:pop()
				callback(type, pos, total_size)
			end
			wait(0)
		end

		checkStatus()
	end)
end

return util
